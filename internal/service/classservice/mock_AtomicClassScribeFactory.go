// Code generated by mockery v2.12.0. DO NOT EDIT.

package classservice

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockAtomicClassScribeFactory is an autogenerated mock type for the AtomicClassScribeFactory type
type MockAtomicClassScribeFactory struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *MockAtomicClassScribeFactory) Execute() AtomicClassScribe {
	ret := _m.Called()

	var r0 AtomicClassScribe
	if rf, ok := ret.Get(0).(func() AtomicClassScribe); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(AtomicClassScribe)
		}
	}

	return r0
}

// NewMockAtomicClassScribeFactory creates a new instance of MockAtomicClassScribeFactory. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAtomicClassScribeFactory(t testing.TB) *MockAtomicClassScribeFactory {
	mock := &MockAtomicClassScribeFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
