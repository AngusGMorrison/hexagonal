// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	context "context"

	classservice "github.com/angusgmorrison/hexagonal/internal/service/classservice"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Enroll provides a mock function with given fields: ctx, er
func (_m *Interface) Enroll(ctx context.Context, er classservice.EnrollmentRequest) error {
	ret := _m.Called(ctx, er)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, classservice.EnrollmentRequest) error); ok {
		r0 = rf(ctx, er)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewInterface creates a new instance of Interface. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewInterface(t testing.TB) *Interface {
	mock := &Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
