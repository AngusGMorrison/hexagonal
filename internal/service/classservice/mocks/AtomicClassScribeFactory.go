// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	classservice "github.com/angusgmorrison/hexagonal/internal/service/classservice"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AtomicClassScribeFactory is an autogenerated mock type for the AtomicClassScribeFactory type
type AtomicClassScribeFactory struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *AtomicClassScribeFactory) Execute() classservice.AtomicClassScribe {
	ret := _m.Called()

	var r0 classservice.AtomicClassScribe
	if rf, ok := ret.Get(0).(func() classservice.AtomicClassScribe); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(classservice.AtomicClassScribe)
		}
	}

	return r0
}

// NewAtomicClassScribeFactory creates a new instance of AtomicClassScribeFactory. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAtomicClassScribeFactory(t testing.TB) *AtomicClassScribeFactory {
	mock := &AtomicClassScribeFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
